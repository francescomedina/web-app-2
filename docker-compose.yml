version: '2.1'

services:
  order:
    build: ./order
    mem_limit: 512m
    ports:
      - "5004:5004"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5004
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_started

#  order-p1:
#    build: ./order
#    mem_limit: 512m
#    environment:
##      - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_1,kafka
#      - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_1,kafka
#    depends_on:
#      mongodb:
#        condition: service_healthy
#      kafka:
#        condition: service_started

  wallet:
    build: ./wallet
    mem_limit: 512m
    ports:
      - "5003:5003"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5003
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_started

#  wallet-p1:
#    build: ./wallet
#    mem_limit: 512m
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_1,kafka
#    depends_on:
#      mongodb:
#        condition: service_healthy
#      kafka:
#        condition: service_started

  warehouse:
    build: ./warehouse
    mem_limit: 512m
    ports:
      - "5002:5002"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5002
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_started

#  warehouse-p1:
#    build: ./warehouse
#    mem_limit: 512m
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_1,kafka
#    depends_on:
#      mongodb:
#        condition: service_healthy
#      kafka:
#        condition: service_started

  catalog:
    build: ./catalog
    mem_limit: 512m
    ports:
      - "8008:8008"
      - "5005:5005"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_started

#  catalog-p1:
#    build: ./catalog
#    mem_limit: 512m
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_1,kafka
#    depends_on:
#      mongodb:
#        condition: service_healthy
#      kafka:
#        condition: service_started

  mongodb:
    image: mongo:4.4.2
    mem_limit: 512m
    ports:
      - "27017:27017"
    command: mongod
    healthcheck:
      test: "mongo --eval 'db.stats().ok'"
      interval: 5s
      timeout: 2s
      retries: 60

  kowl:
    image: quay.io/cloudhut/kowl:master-d782eab
    container_name: kowl
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_BROKERS: kafka:9092

  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    mem_limit: 512m
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    mem_limit: 512m
    ports:
      - "2181:2181"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=zookeeper

  eureka:
    build: ./eureka
    mem_limit: 512m
    ports:
      - "8761:8761"