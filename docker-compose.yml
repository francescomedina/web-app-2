version: '2.1'

services:

  order:
    build: ./order
    container_name: order
    mem_limit: 512m
    ports:
      - "5004:5004"
    environment:
      - MONGODB_URI=mongodb://mongodb-primary:27017/order-db
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5004
    depends_on:
      kafka:
        condition: service_started
      eureka:
        condition: service_healthy
      mongodb-primary:
        condition: service_started

  wallet:
    build: ./wallet
    container_name: wallet
    mem_limit: 512m
    ports:
      - "5003:5003"
    environment:
      - MONGODB_URI=mongodb://mongodb-primary:27017/wallet-db
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5003
    depends_on:
      kafka:
        condition: service_started
      eureka:
        condition: service_healthy
      mongodb-primary:
        condition: service_started

  warehouse:
    build: ./warehouse
    container_name: warehouse
    mem_limit: 512m
    ports:
      - "5002:5002"
    environment:
      - MONGODB_URI=mongodb://mongodb-primary:27017/warehouse-db
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5002
    depends_on:
      kafka:
        condition: service_started
      eureka:
        condition: service_healthy
      mongodb-primary:
        condition: service_started

  catalog:
    build: ./catalog
    container_name: catalog
    mem_limit: 512m
    ports:
      - "8080:8080"
      - "5005:5005"
    environment:
      - MONGODB_URI=mongodb://mongodb-primary:27017/user-db
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    depends_on:
      kafka:
        condition: service_started
      mongodb-primary:
        condition: service_started

  mongosetup:
    image: "mongo-setup"
    build: "./mongo"
    container_name: "mongosetup"
    depends_on:
      - mongodb-primary

  mongodb-primary:
    container_name: mongodb-primary
    image: mongo:latest
    command: "--replSet replicasetkey123 --bind_ip_all --port 27017"
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-primary:/data/db

  mongodb-secondary:
    container_name: mongodb-secondary
    image: 'mongo:latest'
    command: ["--replSet", "replicasetkey123", "--bind_ip_all", "--port", "27017"]
    depends_on:
      - mongodb-primary
    volumes:
      - ./mongo-secondary:/data/db

  mongodb-arbiter:
    container_name: mongodb-arbiter
    image: 'mongo:latest'
    command: ["--replSet", "replicasetkey123", "--bind_ip_all", "--port", "27017"]
    depends_on:
      - mongodb-primary

  kowl:
    image: quay.io/cloudhut/kowl:master-d782eab
    container_name: kowl
    depends_on:
      - kafka
      - kafdrop
      - zookeeper
    ports:
      - "8008:8080"
    environment:
      KAFKA_BROKERS: kafka:9092

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:6.2.0
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop:3.27.0
    ports:
      - "9000:9000"
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERCONNECT: kafka:9092

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:6.2.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  eureka:
    build: ./eureka
    mem_limit: 512m
    ports:
      - "8761:8761"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://eureka:8761" ]
      interval: 5s
      timeout: 3s
      retries: 10

  debezium-connect:
    container_name: debezium-connect
    build: ./mongo-connector
    ports:
      - "8083:8083"
    depends_on:
      - kafka
    environment:
      CONFIG_STORAGE_TOPIC: debezium_connect_configs
      OFFSET_STORAGE_TOPIC: debezium_connect_offsets
      STATUS_STORAGE_TOPIC: debezium_connect_statuses
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
